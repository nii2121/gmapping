GMAPPING - a brief and uncomplete documentation 


**WHAT IS THIS

	GMAPPING is a suite for studying sonar and laser based mapping robotic mapping algorithms.

	The software is able to process log files in the Carmen
	format.  In particular in the suite the following packages are
	provided: 

        1) a scanmatcher based on gradient descent 
        2) a (very cool) grid_fast_slam algorithm
        3) some carmen wrapper, gui stuff, and so on

**REQUIREMENTS:

	an X86 linux machine with 
		gcc>3.2.x
		qt, libraries and development > 3.x
		gsl, gnu scientific libraries > 1.3
	
**COMPILING AND INSTALLING:

	What to do for compiling the software:

	1) uncompress the archive, e.g.
		tar -xzvf gmapping.tgz

	2) change into the source directory
		cd gmapping

	3) set the LD_LIBRARY_PATH variable so that it includes the gmapping/lib directory
		. setlibpath   (bash)
		setend LD_LIBRARY_PATH /.../gmapping/lib  (tcsh)

	4) generate the configuration files
		./configure

	5) compile the software
		make

	At rhis point the following binaries should have been
	generated in the gmapping/bin directory while the gmapping/lib
	directory should contain the following shared objects
	
	Each library is generated from the corresponding directory, in
	the source tree.  Not all of the binaries in gmapping/bin are
	useful, since most of them are test programs for the
	libraries.

**USING

	In the following we focus on the following tools:
	-the scanmatcher
	-the gridfastslam algorithm
	and the related conversion tools

	SCANMATCHER:
		the command line for the scan matcher is
			
			hscanmatch_test [options] -filename <carmen_log>
		
		The rest of the options of the scan matcher are
                illustrated at the end of the document The scanmatcher
                generates a file named scanmatched-<carmen_log>, that
                contains the laser readings anad the robot poses
                corrected.  It is possible, suddenly, to process such
                a file with a tool for generating occupancy grids
                (like carmen), to obtain the map from the log file.
	
		COMMAND LINE OPTIONS [scanmatcher]
		
			Here are the options that can be passed to the command line: <i> integer, <d> double <s> string		
			-filename <s>		: the input log filename in carmen format
			-xmax <d> -xmin <d>, 
			-ymax <d> -ymin <d>	: the map size, in meters
			-delta	<d>		: the patchsize of the hierarchical map used (default 1m)
			-patchDelta <d> 	: the map discretization (default 0.1m)
			-maxrange <d>		: maximum laser range
			-maxUrange <d>		: maximum laser range usable by the algorithm
			-regscore <d>		: the registration score for the scan, if over regscore the scan will be not registered in the map
			-critscore <d> 		: the critical score for the scan, if below cs the scan will be registered in the map using teh odometry.
						must be lower than regscore.
			-kernelSize <i>		: the (half) of the size of the convolution kernel (number of grid cells) minus 1 (default 0)
			-sigma <d>		: the sigma of the convolution gaussian
			-iterations <i>		: the number of recursive iteration used by the scan matcher
			-lstep <d>		: the scanmatcher linear search step, in meters
			-astep	<d>		: the scanmatcher angular search step, in radians
			-maxMove		: the maximal move allowed in the log among adiacent scans
	
	GRIDFASTSLAM:
	
		The grid fast slam (gfs) algorithm is the coolest
		algorithm in the suite.  It allows to build maps with
		a fast slam based algorithm, by adopting a smart
		choice of the prior distribution.  There are three gfs
		tools here:

		1) the gui based tool (gfs_simplegui),
                   which allows to track what is appening while
                   building a map
		2) the command line based tool (gfs_nogui),
		   which can be use for making batch tests.

		2) the on line tool (gfs-carmen), which 
		   can be connected to a system running carmen,
		   for on line map generation.
 	        3) the gfs2log utility, which converts the
 	  	   gfs outoput file in a log file, tracking the best
 	  	   particle.  It is possible to suddenly process the
 	  	   log file in order to obtain the occupancy grid as
 	  	   specified in the scanmatcher.
		
		   ALl the tools can be used for producing a *.gfs file
 	  	   (which is the gfs output format), containing all of
 	  	   the informations produced by the algorithm while
 	  	   running.
		
		The options of gfs_nogui and simplegui are the same,
		and moreover, since they are based on the scanmatcher,
		they accepts all of the options for the scanmatcher.
		
		Instead of using the command line options, use the gfs.ini
		file, which contains all the important parameter!
		
		COMMAND LINE OPTIONS [gridfastslam]
			
			-outfilename <s>	: the output filename in gfs format;
			-filename <s>	        : the carmen log file to process;
			-srr <d>, -srt<d>, 
			-str <d>, -stt<d>	: the motion model parameters (sigma). see gridfastslam/MotionModel.{h,cpp}
			-particles <i>		: the number of the particles to be used 
			-angularUpdate <d>	: the angular update distance, the algorithm executes an update step each time the traveled distance from the last 
						updates exceed this value;
			-linearUpdate <d>	: the linear update distance, the algorithm executes an update step each time the traveled distance from the last 
						updates exceed this value;
			-lsigma <d>		: sigma of the gaussian for evaluating the likelihood in the correlation based model;
			-lobsGain		: gain to be used while evaluating the likelihood, for smoothing the resampling effects
			-lskip			: the laser readings to skip in the likelihood evaluation;
	
	GFS2LOG:

		During the operation gfs_gui shows only the binary
		state of the best particle map cells. This results in
		a less accurate and less nice map representation that
		the one allowed by the algorithm (which internally
		keeps track of the mean of the laser points falling in
		each cell).  In order to recover such a precision it
		is possible to recover a log from a gfsfile, through
		the command:
		
			gfs2log <gfsfile> <logfile>.
		
		and suddenly to recover the occupancy grid from the logfile.
		
** LICENSE

  GMAPPING Copyright (c) 2004 Giorgio Grisetti, 
  Cyrill Stachniss, and Wolfram Burgard
 
  This software is licensed under the "Creative Commons 
  License (Attribution-NonCommercial-ShareAlike 2.0)" 
  and is copyrighted by Giorgio Grisetti, Cyrill Stachniss, 
  and Wolfram Burgard.
  
  Further information on this license can be found at:
  http://creativecommons.org/licenses/by-nc-sa/2.0/
  
  GMAPPING is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied 
  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  PURPOSE.  
 
 In brief,

 - You are free:
    * to copy, distribute, display, and perform the work
    * to make derivative works

 - Under the following conditions:
	* Attribution.   You must give the original author credit.

	* Noncommercial. You may not use this work for commercial 
	                 purposes.

	* Share Alike.   If you alter, transform, or build upon this 
                         work, you may distribute the resulting work 
                         only under a license identical to this one.

 - For any reuse or distribution, you must make clear to others the 
   license terms of this work.
 - Any of these conditions can be waived if you get permission from 
   the copyright holder.



